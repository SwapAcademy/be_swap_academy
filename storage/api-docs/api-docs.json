{
    "openapi": "3.0.0",
    "info": {
        "title": "Swap Academy API Documentation",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://be-swap-academy.nioke-studio.my.id"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user in the system.",
                "operationId": "a718f172ff3ac464d723835815f8fb57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "securepassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email has already been taken."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "description": "Authenticates a user and returns a JWT token.",
                "operationId": "44212a9096e4b09358281e9ec8a0701d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "default@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "your.jwt.token"
                                        },
                                        "token_expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "user": {
                                            "properties": {
                                                "fullname": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "Student"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login credentials are invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "description": "Logs out the user and invalidates the JWT token.",
                "operationId": "79854151e609bd20032aa5aa4d5a35c0",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Log out success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/course": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get list of Course",
                "description": "Returns a list of Course",
                "operationId": "c09c21765f8ddd5cab6a54cb493001ba",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/course/{userId}": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get courses by user ID",
                "description": "Returns a list of courses associated with a user",
                "operationId": "17f72e7c1ed16ab298a0c84a92eddff4",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "course": {
                                                "description": "Course details",
                                                "type": "object"
                                            },
                                            "progress": {
                                                "description": "User's progress in the course",
                                                "type": "integer"
                                            },
                                            "enrollment_at": {
                                                "description": "Date when the user enrolled",
                                                "type": "string",
                                                "format": "date"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/course/category": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get courses by category",
                "description": "Returns a list of courses based on a given category",
                "operationId": "c76dfb6c908e1fb7abcbea12070d761f",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Category name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Course ID",
                                                "type": "integer"
                                            },
                                            "title": {
                                                "description": "Course title",
                                                "type": "string"
                                            },
                                            "description": {
                                                "description": "Course description",
                                                "type": "string"
                                            },
                                            "category": {
                                                "description": "Course category",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation error messages",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/course/upload-course": {
            "post": {
                "tags": [
                    "Course"
                ],
                "summary": "Upload a new course",
                "operationId": "149db39c6610321b589f40d7bf8a9ad0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "title",
                                    "description",
                                    "category",
                                    "skill_level",
                                    "credits_required"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the mentor uploading the course",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "description": "Title of the course",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Introduction to Web Development"
                                    },
                                    "description": {
                                        "description": "Brief description of the course",
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "This course will teach you the basics of web development."
                                    },
                                    "category": {
                                        "description": "Category of the course",
                                        "type": "string",
                                        "enum": [
                                            "technology",
                                            "design",
                                            "management"
                                        ],
                                        "example": "technology"
                                    },
                                    "skill_level": {
                                        "description": "Difficulty level of the course",
                                        "type": "string",
                                        "enum": [
                                            "beginner",
                                            "intermediate",
                                            "advanced"
                                        ],
                                        "example": "beginner"
                                    },
                                    "credits_required": {
                                        "description": "The number of credits required to enroll in the course",
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course uploaded successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user id field is required."
                                                    }
                                                },
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The description field is required."
                                                    }
                                                },
                                                "category": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The category field is required."
                                                    }
                                                },
                                                "skill_level": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The skill level field is required."
                                                    }
                                                },
                                                "credits_required": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The credits required field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/course/uploadVideoByCourse": {
            "post": {
                "tags": [
                    "Course"
                ],
                "summary": "Upload a video for a specific course",
                "description": "This endpoint allows you to upload a video file associated with a course.",
                "operationId": "d31d6390dc7434972b0e5de2bd525a5a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "video",
                                    "course_id"
                                ],
                                "properties": {
                                    "video": {
                                        "description": "The video file to be uploaded",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "course_id": {
                                        "description": "The ID of the course to which the video belongs",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Video uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Video uploaded successfully!"
                                        },
                                        "video_path": {
                                            "type": "string",
                                            "example": "videos/1624362337_video.mp4"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or no video uploaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No video file uploaded."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The selected course_id is invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/course/takeCourse": {
            "post": {
                "tags": [
                    "Course"
                ],
                "summary": "Purchase a course",
                "description": "Allows a user to purchase a course using their credits.",
                "operationId": "takeCourse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "description": "The ID of the user purchasing the course.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "course_id": {
                                        "description": "The ID of the course to be purchased.",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course purchased successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course purchased successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient credits to purchase this course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Insufficient credits to purchase this course."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Course already purchased",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have already purchased this course."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/mentoring": {
            "get": {
                "tags": [
                    "Mentoring"
                ],
                "summary": "Get list of Mentoring",
                "description": "Returns a list of Mentoring",
                "operationId": "84f4f1a94d653c3dbe9511a0d7e2b71f",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/mentoring/{userId}": {
            "get": {
                "tags": [
                    "Mentoring"
                ],
                "summary": "Get mentoring by user ID",
                "description": "Returns a list of Mentoring sessions associated with a user based on their enrollment in courses.",
                "operationId": "1267cdb0b6f2fe259b26992694fe2e09",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "course": {
                                                "description": "Details of the course the user is enrolled in",
                                                "properties": {
                                                    "course_name": {
                                                        "description": "Name of the course",
                                                        "type": "string"
                                                    },
                                                    "category": {
                                                        "description": "Category of the course",
                                                        "type": "string"
                                                    },
                                                    "difficulty_level": {
                                                        "description": "Difficulty level of the course",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "mentoring": {
                                                "description": "Mentoring details",
                                                "properties": {
                                                    "mentor_name": {
                                                        "description": "Name of the mentor",
                                                        "type": "string"
                                                    },
                                                    "mentor_specialization": {
                                                        "description": "Specialization of the mentor",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "progress": {
                                                "description": "User's progress in the course",
                                                "type": "integer"
                                            },
                                            "enrollment_at": {
                                                "description": "Date when the user enrolled in the course",
                                                "type": "string",
                                                "format": "date"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns a list of users",
                "operationId": "50b0b8670b32dc6c4fd9c19c5bfad17e",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/user/profile": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user's profile",
                "description": "Update the authenticated user's profile (name, email, password, role)",
                "operationId": "82069d62c8c808bf2f21f01fc778bec7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/getUsersById/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "description": "Returns a single user by their ID",
                "operationId": "ce99df912f2640ad2ec5fcec0c2ec81a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "johndoe@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "description": "Enter your bearer token below. Example: `Bearer your.jwt.token`",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Course",
            "description": "Course"
        },
        {
            "name": "Mentoring",
            "description": "Mentoring"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}